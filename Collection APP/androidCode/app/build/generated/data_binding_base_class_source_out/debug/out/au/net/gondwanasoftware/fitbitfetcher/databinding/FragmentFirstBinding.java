// Generated by view binder compiler. Do not edit!
package au.net.gondwanasoftware.fitbitfetcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import au.net.gondwanasoftware.fitbitfetcher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFirst;

  @NonNull
  public final Button getDataBtn;

  @NonNull
  public final TextView status;

  @NonNull
  public final ConstraintLayout statusFragment;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textviewCount;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonFirst,
      @NonNull Button getDataBtn, @NonNull TextView status,
      @NonNull ConstraintLayout statusFragment, @NonNull TextView textView,
      @NonNull TextView textviewCount) {
    this.rootView = rootView;
    this.buttonFirst = buttonFirst;
    this.getDataBtn = getDataBtn;
    this.status = status;
    this.statusFragment = statusFragment;
    this.textView = textView;
    this.textviewCount = textviewCount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_first;
      Button buttonFirst = rootView.findViewById(id);
      if (buttonFirst == null) {
        break missingId;
      }

      id = R.id.getDataBtn;
      Button getDataBtn = rootView.findViewById(id);
      if (getDataBtn == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = rootView.findViewById(id);
      if (status == null) {
        break missingId;
      }

      ConstraintLayout statusFragment = (ConstraintLayout) rootView;

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textview_count;
      TextView textviewCount = rootView.findViewById(id);
      if (textviewCount == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, buttonFirst, getDataBtn, status,
          statusFragment, textView, textviewCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
